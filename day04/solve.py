# solve file for day04 problem
import sys
from os import path

sys.path.append(path.dirname(path.dirname(path.abspath(__file__))))

from read_file import by_lines

solve_dir = path.dirname(path.abspath(__file__))
input_path = path.join(solve_dir, "input")
content = by_lines(input_path)

# generated by make_dirs.py


def part1() -> int:
    return sum([1 if contain(l, r) else 0 for l, r in map(parseline, content)])


def part2():
    return sum([1 if overlap(l, r) else 0 for l, r in map(parseline, content)])


from typing import Tuple

Range = Tuple[int, int]


def parseline(line: str) -> Tuple[Range, Range]:
    a, b, c, d = map(int, line.replace("-", ",").split(","))
    return (a, b), (c, d)


def contain(r1: Range, r2: Range) -> bool:
    a, b = r1
    x, y = r2

    return (a <= x and b >= y) or (a >= x and b <= y)


def overlap(r1: Range, r2: Range) -> bool:
    a, b = r1
    x, y = r2

    return not (b < x or y < a)


if __name__ == "__main__":
    print("part1", part1())
    print("part2", part2())
