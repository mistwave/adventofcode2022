# solve file for day05 problem 
import sys
from os import path

sys.path.append(path.dirname(path.dirname(path.abspath(__file__))))

from read_file import by_lines

solve_dir = path.dirname(path.abspath(__file__))
input_path = path.join(solve_dir, "input")
content = by_lines(input_path)

# generated by make_dirs.py

def part1() -> str:
    for i in range(len(content)):
        if content[i] == "":
            stks = parse_stks(content[:i])
            res = move(stks, content[i+1:])
            return "".join(res)
    
    raise ValueError("invalid input")

def part2() -> int:
    for i in range(len(content)):
        if content[i] == "":
            stks = parse_stks(content[:i])
            res = move_thunk(stks, content[i+1:])
            return "".join(res)
    
    raise ValueError("invalid input")

from typing import List
def parse_stks(content: List[str]) -> List[List[str]]:
    l = len(content[0])
    stack_count = (l + 1) // 4
    stks = [[] for _ in range(stack_count)]
    for line in content:
        for i in range(l):
            s = line[i*4:(i+1)*4]
            if s.startswith("["):
                stks[i].append(s[1])

    return [xs[::-1] for xs in stks]


def move_thunk(stks: List[List[str]], content: List[str]) -> List[str]:
    for line in content:
        tokens = line.split()
        num, start, end, = int(tokens[1]), int(tokens[3]), int(tokens[5])

        tmp = []
        for _ in range(num):
            if stks[start-1] != []:
                tmp.append(stks[start-1].pop())
    
        stks[end-1] += tmp[::-1]

    return [xs[-1] for xs in stks]


def move(stks: List[List[str]], content: List[str]) -> List[str]:
    for line in content:
        tokens = line.split()
        num, start, end, = int(tokens[1]), int(tokens[3]), int(tokens[5])
        for _ in range(num):
            if stks[start-1] != []:
                tmp = stks[start-1].pop()
                stks[end-1].append(tmp)
    
    return [xs[-1] for xs in stks]



if __name__ == "__main__":
    print("part1", part1())
    print("part2", part2())
